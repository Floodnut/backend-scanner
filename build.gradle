plugins {
	id 'org.springframework.boot' version '2.6.12'
	id 'io.spring.dependency-management' version '1.0.14.RELEASE'
	id 'java'
	id "org.asciidoctor.convert" version "1.5.9.2"
}

group = 'scanner'
version = '1.0.3'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.amqp:spring-rabbit:2.4.7'
	
	implementation 'com.bertramlabs.plugins:hcl4j:0.4.4'
	implementation 'com.googlecode.json-simple:json-simple:1.1.1'
	implementation 'commons-io:commons-io:2.11.0'
	implementation 'org.apache.commons:commons-compress:1.21'

	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'
	
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
}

ext { 
	set('snippetsDir', file("build/generated-snippets"))
}

test {
	useJUnitPlatform()
	outputs.dir snippetsDir
}

asciidoctor { 
	attributes 'snippets': snippetsDir
	inputs.dir snippetsDir 
	dependsOn test 
}

bootJar {
	dependsOn asciidoctor
	from ("${asciidoctor.outputDir}/html5") { 
		into 'static/docs'
	}
}

task copyDocument(type: Copy) { 
    dependsOn bootJar
    from file("build/asciidoc/html5/")
    into file("src/main/resources/static/docs")
}

build {
    dependsOn copyDocument
}

// tasks.named('test') {
// 	useJUnitPlatform()
// }
